// <auto-generated />
// ------------------------------------------------------------------------------
// XSD2Code generation options. ** Must be at the begining of the file **
// <NameSpace>XSD2Code.Test</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><HidePrivateFieldInIDE>True</HidePrivateFieldInIDE>
// ------------------------------------------------------------------------------
namespace XSD2Code.Test {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Actor : System.ComponentModel.INotifyPropertyChanged {
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string firstnameField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string lastnameField;
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
                OnPropertyChanged("firstname");
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
                OnPropertyChanged("lastname");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        private void OnPropertyChanged(string info) {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class DvdCollection : System.ComponentModel.INotifyPropertyChanged {
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private List <dvds> dvdsField;
        
        // Constructor
        public DvdCollection() {
            if ((this.dvdsField == null)) {
                this.dvdsField = new List <dvds>();
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dvds")]
        public List<dvds> dvds {
            get {
                return this.dvdsField;
            }
            set {
                this.dvdsField = value;
                OnPropertyChanged("dvds");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        private void OnPropertyChanged(string info) {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class dvds : System.ComponentModel.INotifyPropertyChanged {
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string titleField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private string styleField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private List <Actor> actorField;
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private System.Nullable<bool> showField;
        
        // Constructor
        public dvds() {
            if ((this.actorField == null)) {
                this.actorField = new List <Actor>();
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                OnPropertyChanged("title");
            }
        }
        
        /// <remarks/>
        public string style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
                OnPropertyChanged("style");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actor")]
        public List<Actor> Actor {
            get {
                return this.actorField;
            }
            set {
                this.actorField = value;
                OnPropertyChanged("Actor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> show {
            get {
                return this.showField;
            }
            set {
                this.showField = value;
                OnPropertyChanged("show");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        private void OnPropertyChanged(string info) {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class Actors : System.ComponentModel.INotifyPropertyChanged {
        
        [EditorBrowsable(EditorBrowsableState.Never)]
        private List <Actor> actorField;
        
        // Constructor
        public Actors() {
            if ((this.actorField == null)) {
                this.actorField = new List <Actor>();
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Actor")]
        public List<Actor> Actor {
            get {
                return this.actorField;
            }
            set {
                this.actorField = value;
                OnPropertyChanged("Actor");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        private void OnPropertyChanged(string info) {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null) {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
}
